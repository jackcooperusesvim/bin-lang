NADA //Nothing
WIRECOUNT //Some integer
ID //Some (a->z only) string
VALUE //Some (a->z only) string
NOTE: wherever there is a space, you may add an arbirary amount of space. Also, an asterisk represents repition, with optional and unlimited separating space and no delimiters unless specified by a declaration (e.g. ARG)

DECL | EVAL | "print"

# Declarations and Evaluations
DECL = "comp" ID "<" *ARG">" "=" "{" *DECL *EVAL"}" ";"

EVAL = ID "<" * UNION_ARG_IN ">" ","

UNION_ARG_IN = (EVAL | VALUE | ARG_REFERENCE)

ARG_REFERENCE = ID | (ID "." WIRECOUNT)

VALUE = "T" | "F"

*ARG = FUNC_ARG | ARG "," ARG "," ... ARG | VARARG
FUNC_ARG = "comp" ID "<" *ARG">" "{" WIRECOUNT "}"
ARG = ID:WIRECOUNT | NADA
VARARG = ID | NADA
